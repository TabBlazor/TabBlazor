@inject IModalService ModalService

<Button @onclick="ShowConfirmModal" BackgroundColor="TablerColor.Primary">Show Confirm</Button>
<div class=mb-3>@message</div>


<Button @onclick="ShowInfoModal" BackgroundColor="TablerColor.Primary">Show Info</Button>


@code {
    private string message;
   
    protected async Task ShowConfirmModal()
    {
        message = string.Empty;
        var result = await ModalService.ShowDialogAsync(new TabBlazor.Components.Modals.DialogOptions
            {
                MainText = "Are you sure?",
                SubText = "Please note this can not be undone",
                IconType = TablerIcons.Alert_triangle,
                StatusColor = TablerColor.Danger
            });
    
        if (result)
        {
            message = "Ok to continue";
        }
        else
        {
            message = "Do not continue";
        }
    }

        protected async Task ShowInfoModal()
    {

        await ModalService.ShowDialogAsync(new TabBlazor.Components.Modals.DialogOptions
            {
                MainText = "You have a new message",
                SubText = "Check your inbox for more information",
                IconType = TablerIcons.Message,
                CancelText = "",
                StatusColor = TablerColor.Primary
            });
    
     
    }

}
