<h3>@icons.Count Icons</h3>

<Row class="mb-3">

    <RowCol Auto>
        <div class="form-group">
            <label>Size</label>
            <input class="form-control" type="number" min="1" @bind-value="@size" />
        </div>
    </RowCol>

   <RowCol Auto>
        <div class="form-group">
            <label>Rotate</label>
            <input class="form-control" type="number" step="1" @bind-value="@rotate" />
        </div>
      </RowCol>

    <RowCol Auto>
        <div class="form-group">
            <label>Animation</label>

            <Select Items="EnumHelper.GetList<IconAnimation>()" @bind-SelectedValue="animation" TextExpression="e => e.ToString()" />

        </div>
    </RowCol>

 <RowCol Auto>
        <div class="form-group">
            <label>Color</label>
            <input class="form-control form-control-color" type="color" @bind="@color" @bind:event="oninput" />
        </div>
     </RowCol>


  <RowCol Auto>
        <div class="form-group">
            <label>Search</label>
            <input class="form-control" type="text" value="@searchText" @oninput="Search" />
        </div>
      </RowCol>
</Row>

<Row>
    <div class="form-label">Providers</div>

    <div class="badge-list">
        @foreach (var provider in supportedProviders)
        {
            <Badge Size=BadgeSize.Large OnClick="@(() => ToggleFilterProvider(provider))" BackgroundColor="@(filterProviders.Contains(provider) ? TablerColor.Primary : TablerColor.Default)">@provider</Badge>
        }
    </div>

</Row>




<div class="row mt-3 mb-3">
    <div class="col-auto">
        @if (selectedIcons.Any())
        {
            <span>@selectedIcons.Count icons selected</span>
            <Button class="ms-1" Size="ButtonSize.Small" BackgroundColor="TablerColor.Primary" OnClick="CopyToClipboard">Copy to clipboard</Button>
            <Button class="ms-1" Size="ButtonSize.Small" BackgroundColor="TablerColor.Danger" OnClick="ClearSelected">Clear selected</Button>
        }
        else
        {
            <span>Click icons to select..</span>
        }
    </div>
</div>

<Row class="mb-1">
    <RowCol Auto class="text-secondary">
        Showing @filteredIcons.Count (@icons.Count)
    </RowCol>
</Row>

<div class="row mb-3">
    <div style="height:500px;overflow-y:auto">
        <ResizeObserver OnWidthResized=IconContainerResized>
            <Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize Items="@filteredIcons.Batch(GetRowCount()).ToList()" Context="icons">
                @foreach (var icon in icons)
                {
                    <span title="@($"{icon.Name} - {icon.IconType.Provider}")">
                        <label class="me-1 mt-1">
                            <input type="checkbox" class="form-selectgroup-input" checked="@IsSelected(icon)" @onchange="@((e) => SelectIcon(icon))">
                            <span class="form-selectgroup-label">
                                <Icon Size="@size" Animation=animation Rotate=@rotate IconType=icon.IconType Color="@color" />
                            </span>
                        </label>
                    </span>
                }

            </Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize>
        </ResizeObserver>
    </div>
</div>
